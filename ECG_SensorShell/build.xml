<?xml version="1.0" encoding="UTF-8"?>

<!-- Buildfile for the Event-API and ECG SensorShell component -->

<project name="ECG SensorShell" default="help" basedir=".">

	<!-- Project-wide settings. All directories are relative to the -->
	<!-- project root directory -->

	<!-- Project directories -->
	<property name="src.dir" value="src"/>

	<property name="dist.dir" value="dist"/>

	<property name="doc.dir" value="doc"/>

	<property name="lib.dir" value="lib"/>

	<property name="bin.dir" value="bin"/>


	<!-- Temporary build directory names -->
	<property name="build.dir" value="build"/>

	<property name="build.classes" value="${build.dir}/classes"/>

	<property name="build.doc" value="${build.dir}/doc"/>

	<property name="build.lib" value="${build.dir}/lib"/>

	<!-- Classpath setting -->
	<path id="classpath">
		<fileset dir="${lib.dir}">
			<include name="**/*.jar/"/>
		</fileset>

		<fileset dir="e:/programme/eclipse 3.1/plugins/org.junit_3.8.1/">
			<include name="junit.jar"/>
		</fileset>

	</path>


	<target name="help">
		<echo message="Build the ECG SensorShell component"/>
		<echo message="Usage: ant [ant options] target1 [ target2 | target3 | ... ]"/>
		<echo message=""/>
		<echo message="help - print out this help."/>
		<echo message="buildEvent - Build the Event-API."/>
		<echo message="buildShell - Build the ECG SensorShell component."/>
		<echo message="jarEvent - buildEvent + Package the Event-API to event.jar."/>
		<echo message="jarShell - buildShell + Package the ECG SensorShell component to sensorshell.jar."/>
		<echo message="javadoc - Generate the API documentation."/>
		<echo message="clean - Delete class files built during previous builds. Leave directories."/>
		<echo message="cleanall - clean + Delete any created directories and their contents."/>
		<echo message="deployEvent - jarEvent + Deploy the event.jar to ./dist/lib/."/>
		<echo message="deployShell - jarShell + Deploy the sensorshell.jar to ./dist/lib/."/>
	</target>

	<!-- Target to create the build directories prior to a compile target -->
	<!-- The start time of the build is marked as well for the log -->
	<target name="prepare">

		<mkdir dir="${build.dir}"/>
		<mkdir dir="${build.classes}"/>
		<mkdir dir="${build.lib}"/>
		<mkdir dir="${doc.dir}"/>

		<tstamp />
		<echo message="${TSTAMP}"/>

	</target>

	<!-- Build the Event-API. -->
	<target name="buildEvent" depends="prepare,buildLogging">

		<echo message="Building the Event-API..."/>

		<javac
			destdir="${build.classes}"
			srcdir="${src.dir}/org/electrocodeogram/event/"
			source="1.5"
			debug="on"
			deprecation="on">

			<classpath refid="classpath" />

		</javac>

	</target>
	
	<!-- Build the Logging-API. -->
		<target name="buildLogging" depends="prepare">

			<echo message="Building the Logging-API..."/>

			<javac
				destdir="${build.classes}"
				srcdir="${src.dir}/org/electrocodeogram/logging/"
				source="1.5"
				debug="on"
				deprecation="on">

				<classpath refid="classpath" />

			</javac>

		</target>

	<!-- Build the ECG SensorShell component for the sensorshell.jar. -->
	<target name="buildShell" depends="prepare">

		<echo message="Build the ECG SensorShell component..."/>

		<javac
				destdir="${build.classes}"
				srcdir="${src.dir}"
				source="1.5"
				debug="on"
				deprecation="on">

			<classpath refid="classpath" />

		</javac>

	</target>

	<!-- Package the Event-APT to event.jar. -->
	<target name="jarEvent" depends="buildEvent,buildLogging">

		<echo message="Packaging the Event-APT to event.jar...."/>

		<jar
				excludes="org.hackystat.*,org.electrocodeogram.test.*"
				compress="true"
				duplicate="fail"
				jarfile="${build.lib}/event.jar"
				basedir="${build.classes}" />
	</target>

	<!-- Package the ECG SensorShell component's shell parts into a JAR. -->
	<target name="jarShell" depends="buildShell">

		<echo message="Packaging the shell part of the ECG SensorShell component into sensorshell.jar..."/>

		<jar
					excludes="org.hackystat.*"
					compress="true"
					duplicate="fail"
					jarfile="${build.lib}/sensorshell.jar"
					basedir="${build.classes}"
					manifest="manifest.txt"/>

	</target>

	<!-- This shall be the default target. -->
	<target name="all" depends="deployEvent,deployShell"/>

	<!-- Generate the API documentation. -->
	<target name="javadoc">

		<javadoc
			packagenames="org.*"
			sourcepath="${src.dir}"
			destdir="${doc.dir}">

			<classpath refid="classpath"/>

		</javadoc>

	</target>

	<!-- Delete class files built during previous builds. Leave directories. -->
	<target name="clean">

		<delete failonerror="no">
			<fileset dir="${build.classes}" includes="**/*.class"/>
		</delete>

	</target>

	<!-- Delete any created directories and their contents. -->
	<target name="cleanall" depends="clean">

		<delete dir="${build.dir}"/>
		<delete dir="${dist.dir}"/>
		<delete dir="${doc.dir}"/>

		<delete failonerror="no">
			<fileset dir="${lib.dir}/ecg" includes="**/*.jar"/>
		</delete>
		
	</target>

	<!-- Deploy the event.jar to ./dist/lib/.. -->
	<target name="deployEvent" depends="jarEvent">

		<echo message="Deploying the event.jar to ./dist/lib/...."/>

		<!-- Create the distribution directories -->
		<mkdir dir="${dist.dir}"/>
		<mkdir dir="${dist.dir}/lib"/>
		<mkdir dir="${dist.dir}/doc"/>

		<!-- Copy the libraries -->
		<copy todir="${dist.dir}/lib">

			<fileset dir="${build.lib}" includes="event.jar" />

		</copy>

		<!-- Copy the documentation -->
		<copy todir="${dist.dir}/doc">

			<fileset dir="${doc.dir}"/>

		</copy>

		<!-- Copy the JARs to the other projects -->
		<copy todir="../ECG_TestHelper/lib/ecg">

			<fileset dir="${build.lib}" includes="event.jar" />

		</copy>
		
		<copy todir="../ECG_Lab/lib/ecg">

			<fileset dir="${build.lib}" includes="event.jar" />

		</copy>
		
		<copy todir="../ECG_SocketSourceModule/lib/ecg">

				<fileset dir="${build.lib}" includes="event.jar" />

		</copy>
		
		<copy todir="../ECG_FileSystemTargetModule/lib/ecg">

				<fileset dir="${build.lib}" includes="event.jar" />

		</copy>
		
		<copy todir="../ECG_HackyStatTargetModule/lib/ecg">

				<fileset dir="${build.lib}" includes="event.jar" />

		</copy>
		
		<copy todir="../ECG_FileSystemSourceModule/lib/ecg">

				<fileset dir="${build.lib}" includes="event.jar" />

		</copy>
		
		<copy todir="../ECG_MSDTFilterIntermediateModule/lib/ecg">

				<fileset dir="${build.lib}" includes="event.jar" />

		</copy>
		
		<copy todir="../ECG_StatisticsTargetModule/lib/ecg">

				<fileset dir="${build.lib}" includes="event.jar" />

		</copy>
		
		<copy todir="../ECG_CodechangeDifferIntermediateModule/lib/ecg">

				<fileset dir="${build.lib}" includes="event.jar" />

		</copy>
		
		<copy todir="../ECG_IOSourceModule/lib/ecg">

				<fileset dir="${build.lib}" includes="event.jar" />

		</copy>
		
		<copy todir="../ECG_ManualAnnotatorSourceModule/lib/ecg">

				<fileset dir="${build.lib}" includes="event.jar" />

		</copy>

	</target>

	<!-- Deploy the sensorshell.jar to ./dist/lib/. -->
	<target name="deployShell" depends="jarShell">

		<echo message="Deploying the sensorshell.jar to ./dist/lib/...."/>

		<!-- Create the distribution directories -->
		<mkdir dir="${dist.dir}"/>
		<mkdir dir="${dist.dir}/lib"/>
		<mkdir dir="${dist.dir}/doc"/>

		<!-- Copy the libraries -->
		<copy todir="${dist.dir}/lib">

			<fileset dir="${build.lib}" includes="sensorshell.jar" />

		</copy>

		<copy todir="../HackyStat EclipseSensor/">
		
			<fileset dir="${build.lib}" includes="sensorshell.jar" />
			
		</copy>

		<copy todir="../hackyEclipse/">
		
			<fileset dir="${build.lib}" includes="sensorshell.jar" />
			
		</copy>
		
		<copy todir="../ECG_EclipseSensor/">
				
			<fileset dir="${build.lib}" includes="sensorshell.jar" />
					
		</copy>

		
		<copy todir="../ECG_ConnectionTests/lib/ecg">
						
				<fileset dir="${build.lib}" includes="sensorshell.jar" />
							
		</copy>
		
		<!-- Copy the documentation -->
		<copy todir="${dist.dir}/doc">

			<fileset dir="${doc.dir}"/>

		</copy>

	</target>

</project>


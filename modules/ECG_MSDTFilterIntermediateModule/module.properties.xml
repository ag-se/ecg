<?xml version="1.0"?>
<module>
	<id>
		org.electrocodeogram.module.intermediate.implementation.MSDTFilterIntermediateModule
	</id>
	<provider-name>
		Frank Schlesinger (Frank@Schlesinger.com)
	</provider-name>
	<version>
		1.0
	</version>
	<name>
		MicroActivity Filter
	</name>
	<class>
		org.electrocodeogram.module.intermediate.implementation.MSDTFilterIntermediateModule
	</class>
	<description>
		This module can be used to filter out events of certain MicroSensorDataTypes.
		To filter out means here: From all events that this module is receiving, only
		those are sent, which are not of the selected MicroSensorDataTypes.
		
		Use the properties as follows:
		* Blocker is a String of MSDT names, e.g. "msdt.testrun.xsd, msdt.codechange.xsd, msdt.window.xsd".
		  It doesn't matter how they are concatenating. Events which msdt names are in the Blocker string
		  will not pass the filter. If Blocker is used, don't use Passer.
		* Passer is a String of MSDT names, e.g. "msdt.testrun.xsd, msdt.codechange.xsd, msdt.window.xsd".
		  It doesn't matter how they are concatenating. Events which msdt names are in the Passer string
		  will pass the filter, the others won't. If Passer is used, don't use Blocker.
		* Each FilterX is an expression of the kind {MSDTTYPE}={REGEX} where
		  MSDTTYPE is a type name for which the following expression is evaluated
		  REGEX is a regular expression (as used in String.matches()). Only events of the MSDTTYPE type 
		     which confirm to this regex in its toString() representation are passed, i.e. MSDTTYPE-typed
		     events which doesn't fulfill it are filtered. This is evaluated after Passer and Blocker.
	</description>
	<type>
		INTERMEDIATE
	</type>
	<properties>
		<property>
			<propertyName>
				Blocker
			</propertyName>
			<propertyType>
				java.lang.String
			</propertyType>
			<propertyValue>
			</propertyValue>
		</property>
		<property>
			<propertyName>
				Passer
			</propertyName>
			<propertyType>
				java.lang.String
			</propertyType>
			<propertyValue>
			</propertyValue>
		</property>
		<property>
			<propertyName>
				Filter1
			</propertyName>
			<propertyType>
				java.lang.String
			</propertyType>
			<propertyValue>
			</propertyValue>
		</property>
		<property>
			<propertyName>
				Filter2
			</propertyName>
			<propertyType>
				java.lang.String
			</propertyType>
			<propertyValue>
			</propertyValue>
		</property>
		<property>
			<propertyName>
				Filter3
			</propertyName>
			<propertyType>
				java.lang.String
			</propertyType>
			<propertyValue>
			</propertyValue>
		</property>
		<property>
			<propertyName>
				Filter4
			</propertyName>
			<propertyType>
				java.lang.String
			</propertyType>
			<propertyValue>
			</propertyValue>
		</property>
		<property>
			<propertyName>
				Filter5
			</propertyName>
			<propertyType>
				java.lang.String
			</propertyType>
			<propertyValue>
			</propertyValue>
		</property>
	</properties>
</module>
